import java.util.*;
public class TrappingRainWater {

	public static int trap(int[] height) {
		
		// trapped water for a block = 
		// (water level - block height) * width
		
		//If we have 3 block (4 2 6)
		//then trapped water = min(4 6) - 2(height) = 4-2 =2
		
		//Trapped water at a block = min(maxLeft , maxRigth) - width        
		
		//time complexity = O(N^2) 
		//1= O(N)  N= O(N^2) 
		
		int n = height.length;
	    if(n<3) { return 0; }
	    
	    int[] left = new int[n];
	    int[] right = new int[n];
	    
	    left[0] = height[0];
	    for(int i =1;i<n;i++)
	    {
	    	   left[i] = Math.max(left[i-1],height[i]);
	    }
	    
		right[n-2] = height[n-2];
		for(int i = n-2;i>=0;i--)
		{
			right[i]= Math.max(right[i+1],height[i]);
		}
		
		int trappedWater = 0;
		for(int i=1;i<n;i++)
		{
			if(height[i]<left[i] && height[i]<right[i])
			{
				trappedWater += Math.min(left[i],right[i]) - height[i];
			}
		}
		
		return trappedWater;
		
	}
	public static void main(String[]args)
	{
		TrappingRainWater obj = new TrappingRainWater();
		int[] height = {0,1,0,2,1,0,1,3,2,1,2,1};
        System.out.println("Trapped water: " + obj.trap(height));
	}

}
